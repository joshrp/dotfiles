#!/usr/bin/env ruby

# If you've got a lot of FlexUnit tests, then waiting for the
# whole test-compile-run merry-go-round can send you to sleep.
#
# Using git we take a look at the changed files in the project
# then create a slimmed down test suite focusing on changed
# files.
#
# This scrappy script is just selotape to test out the idea.
# If I find it handy then it'll get cleaned up and moved
# over to the flexunit gem.

dir = Dir.pwd

def is_fu_project? path
  File.exist?("#{path}/src") and File.exist?("#{path}/test")
end

def git_status
  `git status --porcelain`.split("\n")
end

unless is_fu_project? dir
  puts "No src or test directories found in current directory"
  exit 0;
end

tracked_changes = /\s*[MADRCU]\s+\b(.*\.(as|mxml))/  #CHANGED Because git add wasn't working, there was no space at the beginning of the line
untracked_changes = /\?\?\s([\w.\/]+\.(as|mxml))/

changed_files = []
testable_files = []
testable_classes = []

git_status.each { |line|
  if line =~ tracked_changes
    changed_files << $1.split(' -> ')
  elsif line =~ untracked_changes
    changed_files << $1
  end
}

changed_files.flatten.uniq.each { |path|
  if path =~ /^src/
    path.sub!(/^src/,'test')
    path.sub!(/\b(.+).as/, "\\1Test.as")
  end

  testable_files << "#{dir}/#{path}" if File.exist?("#{dir}/#{path}")
}

testable_files.each { |path|
  path.sub!(/^.*test\//,'')
  path.sub!(/\.as$/,'')
  path.gsub!(/\//,'.')
  testable_classes << path if path =~ /(\/Test|Test$)/ #might be too restrictive...
}

testable_classes.uniq! if testable_classes.length > 1

puts "Creating AllTests.as"

suite = "package\n{\n"
testable_classes.each { |c| suite << "import #{c};\n" }
suite << "\n[Suite]\n[RunWith(\"org.flexunit.runners.Suite\")]\n"
suite << "public class AllTests\n{\n"
testable_classes.each { |c|
  suite << "    public var #{c.gsub('.','_')}:#{c};\n"
  puts "  Adding #{c}"
}
suite << "}\n}\n"

File.open("#{dir}/test/AllTests.as", 'w') {|f| f.write(suite) }

exit 0
